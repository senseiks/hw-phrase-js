"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlossaryTermTranslationToJSON = exports.GlossaryTermTranslationFromJSONTyped = exports.GlossaryTermTranslationFromJSON = void 0;
var runtime_1 = require("../runtime");
function GlossaryTermTranslationFromJSON(json) {
    return GlossaryTermTranslationFromJSONTyped(json, false);
}
exports.GlossaryTermTranslationFromJSON = GlossaryTermTranslationFromJSON;
function GlossaryTermTranslationFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'localeCode': !(0, runtime_1.exists)(json, 'locale_code') ? undefined : json['locale_code'],
        'content': !(0, runtime_1.exists)(json, 'content') ? undefined : json['content'],
        'createdAt': !(0, runtime_1.exists)(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !(0, runtime_1.exists)(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}
exports.GlossaryTermTranslationFromJSONTyped = GlossaryTermTranslationFromJSONTyped;
function GlossaryTermTranslationToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'locale_code': value.localeCode,
        'content': value.content,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}
exports.GlossaryTermTranslationToJSON = GlossaryTermTranslationToJSON;
