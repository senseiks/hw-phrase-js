/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { JobComment, JobCommentCreateParameters, JobCommentUpdateParameters } from '../models';
export interface JobCommentCreateRequest {
    projectId: string;
    jobId: string;
    jobCommentCreateParameters: JobCommentCreateParameters;
    xPhraseAppOTP?: string;
}
export interface JobCommentDeleteRequest {
    projectId: string;
    jobId: string;
    id: string;
    xPhraseAppOTP?: string;
    branch?: string;
}
export interface JobCommentShowRequest {
    projectId: string;
    jobId: string;
    id: string;
    xPhraseAppOTP?: string;
    branch?: string;
}
export interface JobCommentUpdateRequest {
    projectId: string;
    keyId: string;
    id: string;
    jobCommentUpdateParameters: JobCommentUpdateParameters;
    xPhraseAppOTP?: string;
}
export interface JobCommentsListRequest {
    projectId: string;
    jobId: string;
    xPhraseAppOTP?: string;
    branch?: string;
    order?: string;
}
/**
 *
 */
export declare class JobCommentsApi extends runtime.BaseAPI {
    /**
     * Create a new comment for a job.
     * Create a job comment
     */
    jobCommentCreateRaw(requestParameters: JobCommentCreateRequest): Promise<runtime.ApiResponse<JobComment>>;
    /**
     * Create a new comment for a job.
     * Create a job comment
     */
    jobCommentCreate(requestParameters: JobCommentCreateRequest): Promise<JobComment>;
    /**
     * Delete an existing job comment.
     * Delete a job comment
     */
    jobCommentDeleteRaw(requestParameters: JobCommentDeleteRequest): Promise<runtime.ApiResponse<any>>;
    /**
     * Delete an existing job comment.
     * Delete a job comment
     */
    jobCommentDelete(requestParameters: JobCommentDeleteRequest): Promise<any>;
    /**
     * Get details on a single job comment.
     * Get a single job comment
     */
    jobCommentShowRaw(requestParameters: JobCommentShowRequest): Promise<runtime.ApiResponse<JobComment>>;
    /**
     * Get details on a single job comment.
     * Get a single job comment
     */
    jobCommentShow(requestParameters: JobCommentShowRequest): Promise<JobComment>;
    /**
     * Update an existing job comment.
     * Update a job comment
     */
    jobCommentUpdateRaw(requestParameters: JobCommentUpdateRequest): Promise<runtime.ApiResponse<JobComment>>;
    /**
     * Update an existing job comment.
     * Update a job comment
     */
    jobCommentUpdate(requestParameters: JobCommentUpdateRequest): Promise<JobComment>;
    /**
     * List all comments for a job.
     * List job comments
     */
    jobCommentsListRaw(requestParameters: JobCommentsListRequest): Promise<runtime.ApiResponse<Array<JobComment>>>;
    /**
     * List all comments for a job.
     * List job comments
     */
    jobCommentsList(requestParameters: JobCommentsListRequest): Promise<Array<JobComment>>;
}
