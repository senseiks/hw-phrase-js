/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AffectedResources, KeyCreateParameters, KeyUpdateParameters, KeysExcludeParameters, KeysIncludeParameters, KeysSearchParameters, KeysTagParameters, KeysUntagParameters, TranslationKey, TranslationKeyDetails } from '../models';
export interface KeyCreateRequest {
    projectId: string;
    keyCreateParameters: KeyCreateParameters;
    xPhraseAppOTP?: string;
}
export interface KeyDeleteRequest {
    projectId: string;
    id: string;
    xPhraseAppOTP?: string;
    branch?: string;
}
export interface KeyShowRequest {
    projectId: string;
    id: string;
    xPhraseAppOTP?: string;
    branch?: string;
}
export interface KeyUpdateRequest {
    projectId: string;
    id: string;
    keyUpdateParameters: KeyUpdateParameters;
    xPhraseAppOTP?: string;
}
export interface KeysDeleteCollectionRequest {
    projectId: string;
    xPhraseAppOTP?: string;
    branch?: string;
    q?: string;
    localeId?: string;
}
export interface KeysExcludeRequest {
    projectId: string;
    keysExcludeParameters: KeysExcludeParameters;
    xPhraseAppOTP?: string;
}
export interface KeysIncludeRequest {
    projectId: string;
    keysIncludeParameters: KeysIncludeParameters;
    xPhraseAppOTP?: string;
}
export interface KeysListRequest {
    projectId: string;
    xPhraseAppOTP?: string;
    page?: number;
    perPage?: number;
    branch?: string;
    sort?: string;
    order?: string;
    q?: string;
    localeId?: string;
}
export interface KeysSearchRequest {
    projectId: string;
    keysSearchParameters: KeysSearchParameters;
    xPhraseAppOTP?: string;
    page?: number;
    perPage?: number;
}
export interface KeysTagRequest {
    projectId: string;
    keysTagParameters: KeysTagParameters;
    xPhraseAppOTP?: string;
}
export interface KeysUntagRequest {
    projectId: string;
    keysUntagParameters: KeysUntagParameters;
    xPhraseAppOTP?: string;
}
/**
 *
 */
export declare class KeysApi extends runtime.BaseAPI {
    /**
     * Create a new key.
     * Create a key
     */
    keyCreateRaw(requestParameters: KeyCreateRequest): Promise<runtime.ApiResponse<TranslationKeyDetails>>;
    /**
     * Create a new key.
     * Create a key
     */
    keyCreate(requestParameters: KeyCreateRequest): Promise<TranslationKeyDetails>;
    /**
     * Delete an existing key.
     * Delete a key
     */
    keyDeleteRaw(requestParameters: KeyDeleteRequest): Promise<runtime.ApiResponse<any>>;
    /**
     * Delete an existing key.
     * Delete a key
     */
    keyDelete(requestParameters: KeyDeleteRequest): Promise<any>;
    /**
     * Get details on a single key for a given project.
     * Get a single key
     */
    keyShowRaw(requestParameters: KeyShowRequest): Promise<runtime.ApiResponse<TranslationKeyDetails>>;
    /**
     * Get details on a single key for a given project.
     * Get a single key
     */
    keyShow(requestParameters: KeyShowRequest): Promise<TranslationKeyDetails>;
    /**
     * Update an existing key.
     * Update a key
     */
    keyUpdateRaw(requestParameters: KeyUpdateRequest): Promise<runtime.ApiResponse<TranslationKeyDetails>>;
    /**
     * Update an existing key.
     * Update a key
     */
    keyUpdate(requestParameters: KeyUpdateRequest): Promise<TranslationKeyDetails>;
    /**
     * Delete all keys matching query. Same constraints as list. Please limit the number of affected keys to about 1,000 as you might experience timeouts otherwise.
     * Delete collection of keys
     */
    keysDeleteCollectionRaw(requestParameters: KeysDeleteCollectionRequest): Promise<runtime.ApiResponse<AffectedResources>>;
    /**
     * Delete all keys matching query. Same constraints as list. Please limit the number of affected keys to about 1,000 as you might experience timeouts otherwise.
     * Delete collection of keys
     */
    keysDeleteCollection(requestParameters: KeysDeleteCollectionRequest): Promise<AffectedResources>;
    /**
     * Exclude a locale on keys matching query. Same constraints as list.
     * Exclude a locale on a collection of keys
     */
    keysExcludeRaw(requestParameters: KeysExcludeRequest): Promise<runtime.ApiResponse<AffectedResources>>;
    /**
     * Exclude a locale on keys matching query. Same constraints as list.
     * Exclude a locale on a collection of keys
     */
    keysExclude(requestParameters: KeysExcludeRequest): Promise<AffectedResources>;
    /**
     * Include a locale on keys matching query. Same constraints as list.
     * Include a locale on a collection of keys
     */
    keysIncludeRaw(requestParameters: KeysIncludeRequest): Promise<runtime.ApiResponse<AffectedResources>>;
    /**
     * Include a locale on keys matching query. Same constraints as list.
     * Include a locale on a collection of keys
     */
    keysInclude(requestParameters: KeysIncludeRequest): Promise<AffectedResources>;
    /**
     * List all keys for the given project. Alternatively you can POST requests to /search.
     * List keys
     */
    keysListRaw(requestParameters: KeysListRequest): Promise<runtime.ApiResponse<Array<TranslationKey>>>;
    /**
     * List all keys for the given project. Alternatively you can POST requests to /search.
     * List keys
     */
    keysList(requestParameters: KeysListRequest): Promise<Array<TranslationKey>>;
    /**
     * Search keys for the given project matching query.
     * Search keys
     */
    keysSearchRaw(requestParameters: KeysSearchRequest): Promise<runtime.ApiResponse<Array<TranslationKey>>>;
    /**
     * Search keys for the given project matching query.
     * Search keys
     */
    keysSearch(requestParameters: KeysSearchRequest): Promise<Array<TranslationKey>>;
    /**
     * Tags all keys matching query. Same constraints as list.
     * Add tags to collection of keys
     */
    keysTagRaw(requestParameters: KeysTagRequest): Promise<runtime.ApiResponse<AffectedResources>>;
    /**
     * Tags all keys matching query. Same constraints as list.
     * Add tags to collection of keys
     */
    keysTag(requestParameters: KeysTagRequest): Promise<AffectedResources>;
    /**
     * Removes specified tags from keys matching query.
     * Remove tags from collection of keys
     */
    keysUntagRaw(requestParameters: KeysUntagRequest): Promise<runtime.ApiResponse<AffectedResources>>;
    /**
     * Removes specified tags from keys matching query.
     * Remove tags from collection of keys
     */
    keysUntag(requestParameters: KeysUntagRequest): Promise<AffectedResources>;
}
