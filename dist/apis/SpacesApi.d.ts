/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Project, Space, SpaceCreateParameters, SpaceUpdateParameters, SpacesProjectsCreateParameters } from '../models';
export interface SpaceCreateRequest {
    accountId: string;
    spaceCreateParameters: SpaceCreateParameters;
    xPhraseAppOTP?: string;
}
export interface SpaceDeleteRequest {
    accountId: string;
    id: string;
    xPhraseAppOTP?: string;
}
export interface SpaceShowRequest {
    accountId: string;
    id: string;
    xPhraseAppOTP?: string;
}
export interface SpaceUpdateRequest {
    accountId: string;
    id: string;
    spaceUpdateParameters: SpaceUpdateParameters;
    xPhraseAppOTP?: string;
}
export interface SpacesListRequest {
    accountId: string;
    xPhraseAppOTP?: string;
    page?: number;
    perPage?: number;
}
export interface SpacesProjectsCreateRequest {
    accountId: string;
    spaceId: string;
    spacesProjectsCreateParameters: SpacesProjectsCreateParameters;
    xPhraseAppOTP?: string;
}
export interface SpacesProjectsDeleteRequest {
    accountId: string;
    spaceId: string;
    id: string;
    xPhraseAppOTP?: string;
}
export interface SpacesProjectsListRequest {
    accountId: string;
    spaceId: string;
    xPhraseAppOTP?: string;
    page?: number;
    perPage?: number;
}
/**
 *
 */
export declare class SpacesApi extends runtime.BaseAPI {
    /**
     * Create a new Space.
     * Create a Space
     */
    spaceCreateRaw(requestParameters: SpaceCreateRequest): Promise<runtime.ApiResponse<Space>>;
    /**
     * Create a new Space.
     * Create a Space
     */
    spaceCreate(requestParameters: SpaceCreateRequest): Promise<Space>;
    /**
     * Delete the specified Space.
     * Delete Space
     */
    spaceDeleteRaw(requestParameters: SpaceDeleteRequest): Promise<runtime.ApiResponse<any>>;
    /**
     * Delete the specified Space.
     * Delete Space
     */
    spaceDelete(requestParameters: SpaceDeleteRequest): Promise<any>;
    /**
     * Show the specified Space.
     * Get Space
     */
    spaceShowRaw(requestParameters: SpaceShowRequest): Promise<runtime.ApiResponse<Space>>;
    /**
     * Show the specified Space.
     * Get Space
     */
    spaceShow(requestParameters: SpaceShowRequest): Promise<Space>;
    /**
     * Update the specified Space.
     * Update Space
     */
    spaceUpdateRaw(requestParameters: SpaceUpdateRequest): Promise<runtime.ApiResponse<Space>>;
    /**
     * Update the specified Space.
     * Update Space
     */
    spaceUpdate(requestParameters: SpaceUpdateRequest): Promise<Space>;
    /**
     * List all Spaces for the given account.
     * List Spaces
     */
    spacesListRaw(requestParameters: SpacesListRequest): Promise<runtime.ApiResponse<Array<Space>>>;
    /**
     * List all Spaces for the given account.
     * List Spaces
     */
    spacesList(requestParameters: SpacesListRequest): Promise<Array<Space>>;
    /**
     * Adds an existing project to the space.
     * Add Project to Space
     */
    spacesProjectsCreateRaw(requestParameters: SpacesProjectsCreateRequest): Promise<runtime.ApiResponse<any>>;
    /**
     * Adds an existing project to the space.
     * Add Project to Space
     */
    spacesProjectsCreate(requestParameters: SpacesProjectsCreateRequest): Promise<any>;
    /**
     * Removes a specified project from the specified space.
     * Remove Project from Space
     */
    spacesProjectsDeleteRaw(requestParameters: SpacesProjectsDeleteRequest): Promise<runtime.ApiResponse<any>>;
    /**
     * Removes a specified project from the specified space.
     * Remove Project from Space
     */
    spacesProjectsDelete(requestParameters: SpacesProjectsDeleteRequest): Promise<any>;
    /**
     * List all projects for the specified Space.
     * List Projects in Space
     */
    spacesProjectsListRaw(requestParameters: SpacesProjectsListRequest): Promise<runtime.ApiResponse<Array<Project>>>;
    /**
     * List all projects for the specified Space.
     * List Projects in Space
     */
    spacesProjectsList(requestParameters: SpacesProjectsListRequest): Promise<Array<Project>>;
}
