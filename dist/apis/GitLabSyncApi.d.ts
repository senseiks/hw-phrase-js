/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { GitlabSync, GitlabSyncExport, GitlabSyncExportParameters, GitlabSyncHistory, GitlabSyncImportParameters, Upload } from '../models';
export interface GitlabSyncDeleteRequest {
    id: string;
    xPhraseAppOTP?: string;
    accountId?: string;
}
export interface GitlabSyncExportRequest {
    gitlabSyncId: string;
    gitlabSyncExportParameters: GitlabSyncExportParameters;
    xPhraseAppOTP?: string;
}
export interface GitlabSyncHistoryRequest {
    gitlabSyncId: string;
    xPhraseAppOTP?: string;
    page?: number;
    perPage?: number;
    accountId?: string;
}
export interface GitlabSyncImportRequest {
    gitlabSyncId: string;
    gitlabSyncImportParameters: GitlabSyncImportParameters;
    xPhraseAppOTP?: string;
}
export interface GitlabSyncListRequest {
    xPhraseAppOTP?: string;
    accountId?: string;
}
export interface GitlabSyncShowRequest {
    id: string;
    xPhraseAppOTP?: string;
    accountId?: string;
}
export interface GitlabSyncUpdateRequest {
    id: string;
    xPhraseAppOTP?: string;
    accountId?: string;
    phraseProjectCode?: string;
    gitlabProjectId?: number;
    gitlabBranchName?: string;
}
/**
 *
 */
export declare class GitLabSyncApi extends runtime.BaseAPI {
    /**
     * Deletes a single GitLab Sync Setting.
     * Delete single Sync Setting
     */
    gitlabSyncDeleteRaw(requestParameters: GitlabSyncDeleteRequest): Promise<runtime.ApiResponse<any>>;
    /**
     * Deletes a single GitLab Sync Setting.
     * Delete single Sync Setting
     */
    gitlabSyncDelete(requestParameters: GitlabSyncDeleteRequest): Promise<any>;
    /**
     * Export translations from Phrase Strings to GitLab according to the .phraseapp.yml file within the GitLab repository. <br><br><i>Note: Export is done asynchronously and may take several seconds depending on the project size.</i>
     * Export from Phrase Strings to GitLab
     */
    gitlabSyncExportRaw(requestParameters: GitlabSyncExportRequest): Promise<runtime.ApiResponse<GitlabSyncExport>>;
    /**
     * Export translations from Phrase Strings to GitLab according to the .phraseapp.yml file within the GitLab repository. <br><br><i>Note: Export is done asynchronously and may take several seconds depending on the project size.</i>
     * Export from Phrase Strings to GitLab
     */
    gitlabSyncExport(requestParameters: GitlabSyncExportRequest): Promise<GitlabSyncExport>;
    /**
     * List history for a single Sync Setting.
     * History of single Sync Setting
     */
    gitlabSyncHistoryRaw(requestParameters: GitlabSyncHistoryRequest): Promise<runtime.ApiResponse<Array<GitlabSyncHistory>>>;
    /**
     * List history for a single Sync Setting.
     * History of single Sync Setting
     */
    gitlabSyncHistory(requestParameters: GitlabSyncHistoryRequest): Promise<Array<GitlabSyncHistory>>;
    /**
     * Import translations from GitLab to Phrase Strings according to the .phraseapp.yml file within the GitLab repository. <br><br><i>Note: Import is done asynchronously and may take several seconds depending on the project size.</i>
     * Import from GitLab to Phrase
     */
    gitlabSyncImportRaw(requestParameters: GitlabSyncImportRequest): Promise<runtime.ApiResponse<Array<Upload>>>;
    /**
     * Import translations from GitLab to Phrase Strings according to the .phraseapp.yml file within the GitLab repository. <br><br><i>Note: Import is done asynchronously and may take several seconds depending on the project size.</i>
     * Import from GitLab to Phrase
     */
    gitlabSyncImport(requestParameters: GitlabSyncImportRequest): Promise<Array<Upload>>;
    /**
     * List all GitLab Sync Settings for which synchronisation with Phrase Strings and GitLab is activated.
     * List GitLab syncs
     */
    gitlabSyncListRaw(requestParameters: GitlabSyncListRequest): Promise<runtime.ApiResponse<Array<GitlabSync>>>;
    /**
     * List all GitLab Sync Settings for which synchronisation with Phrase Strings and GitLab is activated.
     * List GitLab syncs
     */
    gitlabSyncList(requestParameters: GitlabSyncListRequest): Promise<Array<GitlabSync>>;
    /**
     * Shows a single GitLab Sync Setting.
     * Get single Sync Setting
     */
    gitlabSyncShowRaw(requestParameters: GitlabSyncShowRequest): Promise<runtime.ApiResponse<GitlabSync>>;
    /**
     * Shows a single GitLab Sync Setting.
     * Get single Sync Setting
     */
    gitlabSyncShow(requestParameters: GitlabSyncShowRequest): Promise<GitlabSync>;
    /**
     * Updates a single GitLab Sync Setting.
     * Update single Sync Setting
     */
    gitlabSyncUpdateRaw(requestParameters: GitlabSyncUpdateRequest): Promise<runtime.ApiResponse<GitlabSync>>;
    /**
     * Updates a single GitLab Sync Setting.
     * Update single Sync Setting
     */
    gitlabSyncUpdate(requestParameters: GitlabSyncUpdateRequest): Promise<GitlabSync>;
}
