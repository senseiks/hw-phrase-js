/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Variable, VariableCreateParameters, VariableUpdateParameters } from '../models';
export interface VariableCreateRequest {
    projectId: string;
    variableCreateParameters: VariableCreateParameters;
    xPhraseAppOTP?: string;
}
export interface VariableDeleteRequest {
    projectId: string;
    name: string;
    xPhraseAppOTP?: string;
}
export interface VariableShowRequest {
    projectId: string;
    name: string;
    xPhraseAppOTP?: string;
}
export interface VariableUpdateRequest {
    projectId: string;
    name: string;
    variableUpdateParameters: VariableUpdateParameters;
    xPhraseAppOTP?: string;
}
export interface VariablesListRequest {
    projectId: string;
    xPhraseAppOTP?: string;
    page?: number;
    perPage?: number;
}
/**
 *
 */
export declare class VariablesApi extends runtime.BaseAPI {
    /**
     * Create a new variable.
     * Create a variable
     */
    variableCreateRaw(requestParameters: VariableCreateRequest): Promise<runtime.ApiResponse<Variable>>;
    /**
     * Create a new variable.
     * Create a variable
     */
    variableCreate(requestParameters: VariableCreateRequest): Promise<Variable>;
    /**
     * Delete an existing variable.
     * Delete a variable
     */
    variableDeleteRaw(requestParameters: VariableDeleteRequest): Promise<runtime.ApiResponse<any>>;
    /**
     * Delete an existing variable.
     * Delete a variable
     */
    variableDelete(requestParameters: VariableDeleteRequest): Promise<any>;
    /**
     * Get details on a single variable for a given project.
     * Get a single variable
     */
    variableShowRaw(requestParameters: VariableShowRequest): Promise<runtime.ApiResponse<Variable>>;
    /**
     * Get details on a single variable for a given project.
     * Get a single variable
     */
    variableShow(requestParameters: VariableShowRequest): Promise<Variable>;
    /**
     * Update an existing variable.
     * Update a variable
     */
    variableUpdateRaw(requestParameters: VariableUpdateRequest): Promise<runtime.ApiResponse<Variable>>;
    /**
     * Update an existing variable.
     * Update a variable
     */
    variableUpdate(requestParameters: VariableUpdateRequest): Promise<Variable>;
    /**
     * List all variables for the current project.
     * List variables
     */
    variablesListRaw(requestParameters: VariablesListRequest): Promise<runtime.ApiResponse<Array<Variable>>>;
    /**
     * List all variables for the current project.
     * List variables
     */
    variablesList(requestParameters: VariablesListRequest): Promise<Array<Variable>>;
}
