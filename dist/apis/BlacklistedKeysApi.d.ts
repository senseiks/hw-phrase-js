/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { BlacklistedKey, BlacklistedKeyCreateParameters, BlacklistedKeyUpdateParameters } from '../models';
export interface BlacklistedKeyCreateRequest {
    projectId: string;
    blacklistedKeyCreateParameters: BlacklistedKeyCreateParameters;
    xPhraseAppOTP?: string;
}
export interface BlacklistedKeyDeleteRequest {
    projectId: string;
    id: string;
    xPhraseAppOTP?: string;
}
export interface BlacklistedKeyShowRequest {
    projectId: string;
    id: string;
    xPhraseAppOTP?: string;
}
export interface BlacklistedKeyUpdateRequest {
    projectId: string;
    id: string;
    blacklistedKeyUpdateParameters: BlacklistedKeyUpdateParameters;
    xPhraseAppOTP?: string;
}
export interface BlacklistedKeysListRequest {
    projectId: string;
    xPhraseAppOTP?: string;
    page?: number;
    perPage?: number;
    branch?: string;
}
/**
 *
 */
export declare class BlacklistedKeysApi extends runtime.BaseAPI {
    /**
     * Create a new rule for blocking keys.
     * Create a blocked key
     */
    blacklistedKeyCreateRaw(requestParameters: BlacklistedKeyCreateRequest): Promise<runtime.ApiResponse<BlacklistedKey>>;
    /**
     * Create a new rule for blocking keys.
     * Create a blocked key
     */
    blacklistedKeyCreate(requestParameters: BlacklistedKeyCreateRequest): Promise<BlacklistedKey>;
    /**
     * Delete an existing rule for blocking keys.
     * Delete a blocked key
     */
    blacklistedKeyDeleteRaw(requestParameters: BlacklistedKeyDeleteRequest): Promise<runtime.ApiResponse<any>>;
    /**
     * Delete an existing rule for blocking keys.
     * Delete a blocked key
     */
    blacklistedKeyDelete(requestParameters: BlacklistedKeyDeleteRequest): Promise<any>;
    /**
     * Get details on a single rule for blocking keys for a given project.
     * Get a single blocked key
     */
    blacklistedKeyShowRaw(requestParameters: BlacklistedKeyShowRequest): Promise<runtime.ApiResponse<BlacklistedKey>>;
    /**
     * Get details on a single rule for blocking keys for a given project.
     * Get a single blocked key
     */
    blacklistedKeyShow(requestParameters: BlacklistedKeyShowRequest): Promise<BlacklistedKey>;
    /**
     * Update an existing rule for blocking keys.
     * Update a blocked key
     */
    blacklistedKeyUpdateRaw(requestParameters: BlacklistedKeyUpdateRequest): Promise<runtime.ApiResponse<BlacklistedKey>>;
    /**
     * Update an existing rule for blocking keys.
     * Update a blocked key
     */
    blacklistedKeyUpdate(requestParameters: BlacklistedKeyUpdateRequest): Promise<BlacklistedKey>;
    /**
     * List all rules for blocking keys for the given project.
     * List blocked keys
     */
    blacklistedKeysListRaw(requestParameters: BlacklistedKeysListRequest): Promise<runtime.ApiResponse<Array<BlacklistedKey>>>;
    /**
     * List all rules for blocking keys for the given project.
     * List blocked keys
     */
    blacklistedKeysList(requestParameters: BlacklistedKeysListRequest): Promise<Array<BlacklistedKey>>;
}
