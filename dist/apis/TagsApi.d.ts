/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Tag, TagCreateParameters, TagWithStats } from '../models';
export interface TagCreateRequest {
    projectId: string;
    tagCreateParameters: TagCreateParameters;
    xPhraseAppOTP?: string;
}
export interface TagDeleteRequest {
    projectId: string;
    name: string;
    xPhraseAppOTP?: string;
    branch?: string;
}
export interface TagShowRequest {
    projectId: string;
    name: string;
    xPhraseAppOTP?: string;
    branch?: string;
}
export interface TagsListRequest {
    projectId: string;
    xPhraseAppOTP?: string;
    page?: number;
    perPage?: number;
    branch?: string;
}
/**
 *
 */
export declare class TagsApi extends runtime.BaseAPI {
    /**
     * Create a new tag.
     * Create a tag
     */
    tagCreateRaw(requestParameters: TagCreateRequest): Promise<runtime.ApiResponse<TagWithStats>>;
    /**
     * Create a new tag.
     * Create a tag
     */
    tagCreate(requestParameters: TagCreateRequest): Promise<TagWithStats>;
    /**
     * Delete an existing tag.
     * Delete a tag
     */
    tagDeleteRaw(requestParameters: TagDeleteRequest): Promise<runtime.ApiResponse<any>>;
    /**
     * Delete an existing tag.
     * Delete a tag
     */
    tagDelete(requestParameters: TagDeleteRequest): Promise<any>;
    /**
     * Get details and progress information on a single tag for a given project.
     * Get a single tag
     */
    tagShowRaw(requestParameters: TagShowRequest): Promise<runtime.ApiResponse<TagWithStats>>;
    /**
     * Get details and progress information on a single tag for a given project.
     * Get a single tag
     */
    tagShow(requestParameters: TagShowRequest): Promise<TagWithStats>;
    /**
     * List all tags for the given project.
     * List tags
     */
    tagsListRaw(requestParameters: TagsListRequest): Promise<runtime.ApiResponse<Array<Tag>>>;
    /**
     * List all tags for the given project.
     * List tags
     */
    tagsList(requestParameters: TagsListRequest): Promise<Array<Tag>>;
}
