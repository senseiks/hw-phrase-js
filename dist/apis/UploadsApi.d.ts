/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Upload } from '../models';
export interface UploadCreateRequest {
    projectId: string;
    xPhraseAppOTP?: string;
    branch?: string;
    file?: Blob;
    fileFormat?: string;
    localeId?: string;
    tags?: string;
    updateTranslations?: boolean;
    updateDescriptions?: boolean;
    convertEmoji?: boolean;
    skipUploadTags?: boolean;
    skipUnverification?: boolean;
    fileEncoding?: string;
    localeMapping?: object;
    formatOptions?: object;
    autotranslate?: boolean;
    markReviewed?: boolean;
    tagOnlyAffectedKeys?: boolean;
}
export interface UploadShowRequest {
    projectId: string;
    id: string;
    xPhraseAppOTP?: string;
    branch?: string;
}
export interface UploadsListRequest {
    projectId: string;
    xPhraseAppOTP?: string;
    page?: number;
    perPage?: number;
    branch?: string;
}
/**
 *
 */
export declare class UploadsApi extends runtime.BaseAPI {
    /**
     * Upload a new language file. Creates necessary resources in your project.
     * Upload a new file
     */
    uploadCreateRaw(requestParameters: UploadCreateRequest): Promise<runtime.ApiResponse<Upload>>;
    /**
     * Upload a new language file. Creates necessary resources in your project.
     * Upload a new file
     */
    uploadCreate(requestParameters: UploadCreateRequest): Promise<Upload>;
    /**
     * View details and summary for a single upload.
     * Get a single upload
     */
    uploadShowRaw(requestParameters: UploadShowRequest): Promise<runtime.ApiResponse<Upload>>;
    /**
     * View details and summary for a single upload.
     * Get a single upload
     */
    uploadShow(requestParameters: UploadShowRequest): Promise<Upload>;
    /**
     * List all uploads for the given project.
     * List uploads
     */
    uploadsListRaw(requestParameters: UploadsListRequest): Promise<runtime.ApiResponse<Array<Upload>>>;
    /**
     * List all uploads for the given project.
     * List uploads
     */
    uploadsList(requestParameters: UploadsListRequest): Promise<Array<Upload>>;
}
